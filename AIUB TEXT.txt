#include <windows.h>
#include <GL/glut.h>


void display() {
	glClearColor(0.0f, 0.0f, 0.0f, 1.0f); // Set background color to black and opaque
	glClear(GL_COLOR_BUFFER_BIT);         // Clear the color buffer (background)
	glLineWidth(.5);
	// Draw a Red 1x1 Square centered at origin
	glBegin(GL_QUADS);              // A left wall
	glColor3f(1.0f, 0.0f, 0.0f); // Red

	glVertex2f(-0.5f, 0.0f);    // x, y
	glVertex2f(-0.62f, 0.0f);    // x, y

	glVertex2f(-0.75f, 0.71f);    // x, y
	glVertex2f(-0.7f, 0.86f);    // x, y
	glEnd();

    glBegin(GL_QUADS);              // A left wall
	glColor3f(1.0f, 0.0f, 0.0f); // Red

	glVertex2f(-1.0f, 0.0f);    // x, y
	glVertex2f(-0.88f, 0.0f);    // x, y

	glVertex2f(-0.7f, 0.86f);    // x, y
	glVertex2f(-0.76f, 0.86f);    // x, y
	glEnd();

	glLineWidth(19.5);
	// Draw a Red 1x1 Square centered at origin
	glBegin(GL_LINES);              // A middle
	glColor3f(1.0f, 0.0f, 0.0f); // Red
	glVertex2f(-0.9f, 0.2f);    // x, y
	glVertex2f(-0.6f, 0.2f);    // x, y
	glVertex2f(-0.7f, 0.2f);    // x, y
	glVertex2f(-0.6f, 0.2f);    // x, y


	glEnd();

    glLineWidth(19.5);
	// Draw a Red 1x1 Square centered at origin
	glBegin(GL_LINES);              // I
	glColor3f(1.0f, 0.0f, 0.0f); // Red
	glVertex2f(-0.45f, 0.87f);    // x, y
	glVertex2f(-0.45f, -0.001f);    // x, y



	glEnd();


	 glLineWidth(20.5);
	// Draw a Red 1x1 Square centered at origin
	glBegin(GL_LINES);              // U left
	glColor3f(1.0f, 0.0f, 0.0f); // Red
	glVertex2f(-0.36f, 0.87f);    // x, y
	glVertex2f(-0.36f, 0.02f);    // x, y
    glEnd();


	glLineWidth(20.5);
	// Draw a Red 1x1 Square centered at origin
	glBegin(GL_LINES);              // U right,under
	glColor3f(1.0f, 0.0f, 0.0f); // Red
	glVertex2f(-0.1f,0.001f);    // x, y
	glVertex2f(-0.36f,-0.0f);    // x, y
	glVertex2f(-0.1f, 0.02f);    // x, y
	glVertex2f(-0.1f, 0.87f);    // x, y


	glEnd();


	glLineWidth(20.5);
	// Draw a Red 1x1 Square centered at origin
	glBegin(GL_LINES);              // B
	glColor3f(1.0f, 0.0f, 0.0f); // Red
	glVertex2f(0.1f,0.001f);    // x, y
	glVertex2f(0.5f,-0.0f);    // x, y
	glVertex2f(0.1f, -0.0f);    // x, y
	glVertex2f(0.1f, 0.8f);    // x, y
    glVertex2f(0.5f, -0.0f);    // x, y
	glVertex2f(0.5f, 0.4f);    // x, y
    glVertex2f(0.1f, 0.4f);    // x, y
	glVertex2f(0.5f, 0.4f);    // x, y
    glVertex2f(0.5f, 0.8f);    // x, y
	glVertex2f(0.5f, 0.42f);    // x, y
	glVertex2f(0.1f, 0.8f);    // x, y
	glVertex2f(0.5f, 0.8f);    // x, y

	glEnd();


	glFlush();  // Render now
}

/* Main function: GLUT runs as a console application starting at main()  */
int main(int argc, char** argv) {
	glutInit(&argc, argv);                 // Initialize GLUT
	glutCreateWindow("OpenGL Setup"); // Create a window with the given title
	glutInitWindowSize(320, 320);   // Set the window's initial width & height
	glutReshapeWindow(900,600);
	glutDisplayFunc(display); // Register display callback handler for window re-paint
	glutMainLoop(); // Enter the event-processing loop
	return 0;
}
