#include <windows.h>  // for MS Windows
#include <GL/glut.h>  // GLUT, include glu.h and gl.h

/* Initialize OpenGL Graphics */
void initGL() {
   // Set "clearing" or background color
   glClearColor(0.0f, 0.0f, 0.0f, 1.0f); // Black and opaque
}

/* Handler for window-repaint event. Call back when the window first appears and
   whenever the window needs to be re-painted. */
void display() {
                   // Reset the model-view matrix

  glClearColor(0.0f, 0.0f, 0.0f, 1.0f); // Set background color to black and opaque
	glClear(GL_COLOR_BUFFER_BIT);    // Clear the color buffer
   glMatrixMode(GL_MODELVIEW);      // To operate on Model-View matrix
   glLoadIdentity();        // Clear the color buffer (background)
	glLineWidth(0.5);
	// Draw a Red 1x1 Square centered at origin

	////////////////////////////////////RIGHT FAN//////////////////


	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.0f, 0.0f);    // x, y
	glVertex2f(0.05f, -0.1f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.05f, -0.1f);    // x, y
	glVertex2f(0.1f, -0.1f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.1f, -0.1f);    // x, y
	glVertex2f(0.1f, -0.05f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.1f, -0.05f);    // x, y
	glVertex2f(0.0f, 0.0f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.0f, 0.0f);    // x, y
	glVertex2f(0.05f, 0.1f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.05f, 0.1f);    // x, y
	glVertex2f(0.1f, 0.1f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.1f, 0.1f);    // x, y
	glVertex2f(0.1f, 0.05f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.1f, 0.05f);    // x, y
	glVertex2f(0.0f, 0.0f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.1f, 0.1f);    // x, y
	glVertex2f(0.2f, 0.15f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.2f, 0.15f);    // x, y
	glVertex2f(0.2f, 0.1f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.2f, 0.1f);    // x, y
	glVertex2f(0.3f, 0.2f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.3f, 0.2f);    // x, y
	glVertex2f(0.3f, 0.25f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.3f, 0.25f);    // x, y
	glVertex2f(0.4f, 0.3f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.4f, 0.3f);    // x, y
	glVertex2f(0.4f, 0.1f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.4f, 0.1f);    // x, y
	glVertex2f(0.5f, 0.2f);    // x, y
	glEnd();

glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.5f, 0.2f);    // x, y
	glVertex2f(0.5f, 0.25f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.5f, 0.25f);    // x, y
	glVertex2f(0.6f, 0.3f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.6f, 0.3f);    // x, y
	glVertex2f(0.6f, 0.1f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.6f, 0.1f);    // x, y
	glVertex2f(0.7f, 0.2f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.7f, 0.2f);    // x, y
	glVertex2f(0.7f, -0.2f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.7f, -0.2f);    // x, y
	glVertex2f(0.6f, -0.1f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.6f, -0.1f);    // x, y
	glVertex2f(0.6f, -0.3f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.7f, -0.2f);    // x, y
	glVertex2f(0.6f, -0.1f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.6f, -0.3f);    // x, y
	glVertex2f(0.5f, -0.25f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.5f, -0.25f);    // x, y
	glVertex2f(0.5f, -0.2f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.5f, -0.2f);    // x, y
	glVertex2f(0.4f, -0.1f);    // x, y
	glEnd();

    glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.4f, -0.1f);    // x, y
	glVertex2f(0.4f, -0.3f);    // x, y
	glEnd();



	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.4f, -0.3f);    // x, y
	glVertex2f(0.3f, -0.25f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.3f, -0.25f);    // x, y
	glVertex2f(0.3f, -0.2f);    // x, y
	glEnd();



	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.3f, -0.2f);    // x, y
	glVertex2f(0.2f, -0.1f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.2f, -0.1f);    // x, y
	glVertex2f(0.2f, -0.15f);    // x, y
	glEnd();



	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.2f, -0.15f);    // x, y
	glVertex2f(0.1f, -0.1f);    // x, y
	glEnd();













	 ////////////////////////////////////LEFT FAN//////////////////



     glTranslatef(0.0f, 0.0f, 0.0f);
     glRotatef(180.0f, 0.0f, 0.0f, 1.0f);

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.0f, 0.0f);    // x, y
	glVertex2f(0.05f, -0.1f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.05f, -0.1f);    // x, y
	glVertex2f(0.1f, -0.1f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.1f, -0.1f);    // x, y
	glVertex2f(0.1f, -0.05f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.1f, -0.05f);    // x, y
	glVertex2f(0.0f, 0.0f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.0f, 0.0f);    // x, y
	glVertex2f(0.05f, 0.1f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.05f, 0.1f);    // x, y
	glVertex2f(0.1f, 0.1f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.1f, 0.1f);    // x, y
	glVertex2f(0.1f, 0.05f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.1f, 0.05f);    // x, y
	glVertex2f(0.0f, 0.0f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.1f, 0.1f);    // x, y
	glVertex2f(0.2f, 0.15f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.2f, 0.15f);    // x, y
	glVertex2f(0.2f, 0.1f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.2f, 0.1f);    // x, y
	glVertex2f(0.3f, 0.2f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.3f, 0.2f);    // x, y
	glVertex2f(0.3f, 0.25f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.3f, 0.25f);    // x, y
	glVertex2f(0.4f, 0.3f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.4f, 0.3f);    // x, y
	glVertex2f(0.4f, 0.1f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.4f, 0.1f);    // x, y
	glVertex2f(0.5f, 0.2f);    // x, y
	glEnd();

glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.5f, 0.2f);    // x, y
	glVertex2f(0.5f, 0.25f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.5f, 0.25f);    // x, y
	glVertex2f(0.6f, 0.3f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.6f, 0.3f);    // x, y
	glVertex2f(0.6f, 0.1f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.6f, 0.1f);    // x, y
	glVertex2f(0.7f, 0.2f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.7f, 0.2f);    // x, y
	glVertex2f(0.7f, -0.2f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.7f, -0.2f);    // x, y
	glVertex2f(0.6f, -0.1f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.6f, -0.1f);    // x, y
	glVertex2f(0.6f, -0.3f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.7f, -0.2f);    // x, y
	glVertex2f(0.6f, -0.1f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.6f, -0.3f);    // x, y
	glVertex2f(0.5f, -0.25f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.5f, -0.25f);    // x, y
	glVertex2f(0.5f, -0.2f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.5f, -0.2f);    // x, y
	glVertex2f(0.4f, -0.1f);    // x, y
	glEnd();

    glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.4f, -0.1f);    // x, y
	glVertex2f(0.4f, -0.3f);    // x, y
	glEnd();



	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.4f, -0.3f);    // x, y
	glVertex2f(0.3f, -0.25f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.3f, -0.25f);    // x, y
	glVertex2f(0.3f, -0.2f);    // x, y
	glEnd();



	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.3f, -0.2f);    // x, y
	glVertex2f(0.2f, -0.1f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.2f, -0.1f);    // x, y
	glVertex2f(0.2f, -0.15f);    // x, y
	glEnd();



	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.2f, -0.15f);    // x, y
	glVertex2f(0.1f, -0.1f);    // x, y
	glEnd();












	////////////////////////////////////UPPER FAN//////////////////




     glTranslatef(0.0f, 0.0f, 0.0f);
     glRotatef(270.0f, 0.0f, 0.0f, 1.0f);

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.0f, 0.0f);    // x, y
	glVertex2f(0.05f, -0.1f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.05f, -0.1f);    // x, y
	glVertex2f(0.1f, -0.1f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.1f, -0.1f);    // x, y
	glVertex2f(0.1f, -0.05f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.1f, -0.05f);    // x, y
	glVertex2f(0.0f, 0.0f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.0f, 0.0f);    // x, y
	glVertex2f(0.05f, 0.1f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.05f, 0.1f);    // x, y
	glVertex2f(0.1f, 0.1f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.1f, 0.1f);    // x, y
	glVertex2f(0.1f, 0.05f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.1f, 0.05f);    // x, y
	glVertex2f(0.0f, 0.0f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.1f, 0.1f);    // x, y
	glVertex2f(0.2f, 0.15f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.2f, 0.15f);    // x, y
	glVertex2f(0.2f, 0.1f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.2f, 0.1f);    // x, y
	glVertex2f(0.3f, 0.2f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.3f, 0.2f);    // x, y
	glVertex2f(0.3f, 0.25f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.3f, 0.25f);    // x, y
	glVertex2f(0.4f, 0.3f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.4f, 0.3f);    // x, y
	glVertex2f(0.4f, 0.1f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.4f, 0.1f);    // x, y
	glVertex2f(0.5f, 0.2f);    // x, y
	glEnd();

    glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.5f, 0.2f);    // x, y
	glVertex2f(0.5f, 0.25f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.5f, 0.25f);    // x, y
	glVertex2f(0.6f, 0.3f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.6f, 0.3f);    // x, y
	glVertex2f(0.6f, 0.1f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.6f, 0.1f);    // x, y
	glVertex2f(0.7f, 0.2f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.7f, 0.2f);    // x, y
	glVertex2f(0.7f, -0.2f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.7f, -0.2f);    // x, y
	glVertex2f(0.6f, -0.1f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.6f, -0.1f);    // x, y
	glVertex2f(0.6f, -0.3f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.7f, -0.2f);    // x, y
	glVertex2f(0.6f, -0.1f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.6f, -0.3f);    // x, y
	glVertex2f(0.5f, -0.25f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.5f, -0.25f);    // x, y
	glVertex2f(0.5f, -0.2f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.5f, -0.2f);    // x, y
	glVertex2f(0.4f, -0.1f);    // x, y
	glEnd();

    glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.4f, -0.1f);    // x, y
	glVertex2f(0.4f, -0.3f);    // x, y
	glEnd();



	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.4f, -0.3f);    // x, y
	glVertex2f(0.3f, -0.25f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.3f, -0.25f);    // x, y
	glVertex2f(0.3f, -0.2f);    // x, y
	glEnd();



	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.3f, -0.2f);    // x, y
	glVertex2f(0.2f, -0.1f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.2f, -0.1f);    // x, y
	glVertex2f(0.2f, -0.15f);    // x, y
	glEnd();



	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.2f, -0.15f);    // x, y
	glVertex2f(0.1f, -0.1f);    // x, y
	glEnd();









	////////////////////////////////////DOWN FAN//////////////////



     glTranslatef(0.0f, 0.0f, 0.0f);
     glRotatef(-90.0f, 0.0f, 0.0f, 1.0f);

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.0f, 0.0f);    // x, y
	glVertex2f(0.05f, -0.1f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.05f, -0.1f);    // x, y
	glVertex2f(0.1f, -0.1f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.1f, -0.1f);    // x, y
	glVertex2f(0.1f, -0.05f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.1f, -0.05f);    // x, y
	glVertex2f(0.0f, 0.0f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.0f, 0.0f);    // x, y
	glVertex2f(0.05f, 0.1f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.05f, 0.1f);    // x, y
	glVertex2f(0.1f, 0.1f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.1f, 0.1f);    // x, y
	glVertex2f(0.1f, 0.05f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.1f, 0.05f);    // x, y
	glVertex2f(0.0f, 0.0f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.1f, 0.1f);    // x, y
	glVertex2f(0.2f, 0.15f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.2f, 0.15f);    // x, y
	glVertex2f(0.2f, 0.1f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.2f, 0.1f);    // x, y
	glVertex2f(0.3f, 0.2f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.3f, 0.2f);    // x, y
	glVertex2f(0.3f, 0.25f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.3f, 0.25f);    // x, y
	glVertex2f(0.4f, 0.3f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.4f, 0.3f);    // x, y
	glVertex2f(0.4f, 0.1f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.4f, 0.1f);    // x, y
	glVertex2f(0.5f, 0.2f);    // x, y
	glEnd();

glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.5f, 0.2f);    // x, y
	glVertex2f(0.5f, 0.25f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.5f, 0.25f);    // x, y
	glVertex2f(0.6f, 0.3f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.6f, 0.3f);    // x, y
	glVertex2f(0.6f, 0.1f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.6f, 0.1f);    // x, y
	glVertex2f(0.7f, 0.2f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.7f, 0.2f);    // x, y
	glVertex2f(0.7f, -0.2f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.7f, -0.2f);    // x, y
	glVertex2f(0.6f, -0.1f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.6f, -0.1f);    // x, y
	glVertex2f(0.6f, -0.3f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.7f, -0.2f);    // x, y
	glVertex2f(0.6f, -0.1f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.6f, -0.3f);    // x, y
	glVertex2f(0.5f, -0.25f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.5f, -0.25f);    // x, y
	glVertex2f(0.5f, -0.2f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.5f, -0.2f);    // x, y
	glVertex2f(0.4f, -0.1f);    // x, y
	glEnd();

    glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.4f, -0.1f);    // x, y
	glVertex2f(0.4f, -0.3f);    // x, y
	glEnd();



	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.4f, -0.3f);    // x, y
	glVertex2f(0.3f, -0.25f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.3f, -0.25f);    // x, y
	glVertex2f(0.3f, -0.2f);    // x, y
	glEnd();



	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.3f, -0.2f);    // x, y
	glVertex2f(0.2f, -0.1f);    // x, y
	glEnd();

	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.2f, -0.1f);    // x, y
	glVertex2f(0.2f, -0.15f);    // x, y
	glEnd();



	glBegin(GL_LINES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red
	glVertex2f(0.2f, -0.15f);    // x, y
	glVertex2f(0.1f, -0.1f);    // x, y
	glEnd();




    glFlush();











}

void reshape(GLsizei width, GLsizei height) {  // GLsizei for non-negative integer
   // Compute aspect ratio of the new window
   if (height == 0) height = 1;                // To prevent divide by 0
   GLfloat aspect = (GLfloat)width / (GLfloat)height;

   // Set the viewport to cover the new window
   glViewport(0, 0, width, height);

   // Set the aspect ratio of the clipping area to match the viewport
   glMatrixMode(GL_PROJECTION);  // To operate on the Projection matrix
   glLoadIdentity();
   if (width >= height) {
     // aspect >= 1, set the height from -1 to 1, with larger width
      gluOrtho2D(-1.0 * aspect, 1.0 * aspect, -1.0, 1.0);
   } else {
      // aspect < 1, set the width to -1 to 1, with larger height
     gluOrtho2D(-1.0, 1.0, -1.0 / aspect, 1.0 / aspect);
   }
}

/* Main function: GLUT runs as a console application starting at main() */
int main(int argc, char** argv) {
   glutInit(&argc, argv);          // Initialize GLUT
   glutInitWindowSize(640, 480);   // Set the window's initial width & height - non-square
   glutInitWindowPosition(50, 50); // Position the window's initial top-left corner
   glutCreateWindow("Model Transform");  // Create window with the given title
   glutDisplayFunc(display);       // Register callback handler for window re-paint event
   glutReshapeFunc(reshape);       // Register callback handler for window re-size event
   initGL();                       // Our own OpenGL initialization
   glutMainLoop();                 // Enter the infinite event-processing loop
   return 0;
}
